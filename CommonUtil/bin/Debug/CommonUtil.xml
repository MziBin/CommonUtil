<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CommonUtil</name>
    </assembly>
    <members>
        <member name="M:CommonUtil.Ini.Implement.Ini.ReadValue(System.String,System.String,System.String)">
            <summary>
            读取指定section中的指定key的值。如果section或key不存在，则返回默认值defaultValue。
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Ini.Implement.Ini.WriteValue(System.String,System.String,System.String)">
            <summary>
            写入指定section中的指定key的值。如果section或key不存在，则创建它们。
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:CommonUtil.Ini.Implement.Ini.ReadKeys(System.String)">
            <summary>
            读取INI文件中指定section中的所有key的名称列表。如果section不存在，则返回一个空列表。
            </summary>
            <param name="SectionName"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Ini.Implement.Ini.ReadSection(System.String)">
            <summary>
            读取指定section中的所有key及其对应的值，返回一个字典对象。如果section不存在，则返回一个空字典。
            </summary>
            <param name="section"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:CommonUtil.Ini.Implement.Ini.DeleteKey(System.String,System.String)">
            <summary>
            删除指定section中的指定key。
            </summary>
            <param name="section"></param>
            <param name="key"></param>
        </member>
        <member name="M:CommonUtil.Ini.Implement.Ini.DeleteSection(System.String)">
            <summary>
            删除指定的section以及其包含的所有key。
            </summary>
            <param name="section"></param>
        </member>
        <member name="M:CommonUtil.Ini.Implement.Ini.HasSection(System.String)">
            <summary>
            判断指定的section是否存在。
            </summary>
            <param name="section"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:CommonUtil.Ini.Implement.Ini.HasKey(System.String,System.String)">
            <summary>
            判断指定的section中是否存在指定的key。
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:CommonUtil.Ini.Interface.IIni.FilePath">
            <summary>
            获取或设置INI文件的路径。
            </summary>
        </member>
        <member name="M:CommonUtil.Ini.Interface.IIni.ReadValue(System.String,System.String,System.String)">
            <summary>
            获取指定section中的指定key的值。如果section或key不存在，则返回默认值defaultValue。
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Ini.Interface.IIni.WriteValue(System.String,System.String,System.String)">
            <summary>
            设置指定section中的指定key的值。如果section或key不存在，则创建它们。
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:CommonUtil.Ini.Interface.IIni.ReadKeys(System.String)">
            <summary>
            获取INI文件中指定section中的所有key的名称列表。如果section不存在，则返回一个空列表。
            </summary>
            <param name="SectionName"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Ini.Interface.IIni.ReadSection(System.String)">
            <summary>
            读取指定section中的所有key及其对应的值，返回一个字典对象。如果section不存在，则返回一个空字典。
            </summary>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.Ini.Interface.IIni.DeleteKey(System.String,System.String)">
            <summary>
            删除指定section中的指定key。
            </summary>
            <param name="section"></param>
            <param name="key"></param>
        </member>
        <member name="M:CommonUtil.Ini.Interface.IIni.DeleteSection(System.String)">
            <summary>
            删除指定的section以及其包含的所有key。
            </summary>
            <param name="section"></param>
        </member>
        <member name="M:CommonUtil.Ini.Interface.IIni.HasSection(System.String)">
            <summary>
            确定指定的section是否存在。
            </summary>
            <param name="section">查询的名称，不能为空</param>
            <returns>true表示存在，否则false</returns>
        </member>
        <member name="M:CommonUtil.Ini.Interface.IIni.HasKey(System.String,System.String)">
            <summary>
            确定指定的section是否包含给定的key。
            </summary>
            <param name="section">要查询的部分，不能为空</param>
            <param name="key">要查询的key，不能为空</param>
            <returns>true 表示有指定的key，否则false</returns>
        </member>
        <member name="M:CommonUtil.JSON.Interface.IJson.SerializeObject``1(``0)">
            <summary>
            对象序列化为JSON字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.JSON.Interface.IJson.DeserializeObject``1(System.String)">
            <summary>
            JSON字符串反序列化为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.JSON.Interface.IJson.ReadFromFile``1(System.String)">
            <summary>
            从 JSON 文件中读取数据并反序列化为指定类型的对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.JSON.Interface.IJson.WriteToFile``1(System.String,``0)">
            <summary>
            将对象序列化为 JSON 字符串并写入到指定文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <param name="obj"></param>
        </member>
        <member name="M:CommonUtil.JSON.Interface.IJson.GetValueFromJson(System.String,System.String)">
            <summary>
            从 JSON 字符串中获取指定键的值
            </summary>
            <param name="json"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtil.JSON.Interface.IJson.ReadFromFileAndKey``1(System.String,System.String)">
            <summary>
            从 JSON 文件中读取数据，反序列化为字典对象，并根据指定的键获取对应的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
    </members>
</doc>
